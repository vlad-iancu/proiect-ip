openapi: 3.0.0
info:
  version: "1.0.0"
  license:
    name: GNU General Public License v3.0
    url: https://github.com/vlad-iancu/proiect-ip/blob/main/LICENSE
  title: Proiect IP
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/vladpirlog/proiect-ip/1.0.0
tags:
  - name: ingredient
    description: Everything related to ingredients
  - name: auth
    description: Everything related to authentication
  - name: coffee-recipe
    description: Everything related to coffee recipes
  - name: coffee-preparation
    description: Everything related to coffee preparations
  - name: environment
    description: Everything related to the environment
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      operationId: register
      responses:
        201:
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        400:
          description: Bad Request
      requestBody:
        $ref: '#/components/requestBodies/RegisterOrLogin'
  /auth/login:
    post:
      tags:
        - auth
      summary: User login
      operationId: login
      responses:
        200:
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        401:
          description: Login failed
      requestBody:
        $ref: '#/components/requestBodies/RegisterOrLogin'
  /auth/logout:
    get:
      tags:
        - auth
      summary: User logout
      operationId: logout
      responses:
        200:
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        401:
          description: Logout failed
  /coffeepreparations/custom:
    post:
      tags:
        - coffee-preparation
      summary: Add custom coffee preparation
      operationId: addCustomCoffeePreparation
      security:
      - cookieAuth: []
      responses:
        201:
          description: Successfully added custom coffee preparation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      prepared_coffee:
                        $ref: '#/components/schemas/CoffeePreparation'
        400:
          description: Bad request
        401:
          description: Login required
      requestBody:
        $ref: '#/components/requestBodies/PrepareCoffeeCustom'
  /coffeepreparations:
    get:
      tags:
        - coffee-preparation
      summary: Get all coffee preparation
      operationId: getCoffeePreparations
      security:
      - cookieAuth: []
      responses:
        200:
          description: Successfully fetched all the coffee preparations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      all_prepared_coffees:
                        type: array
                        items:
                          $ref: '#/components/schemas/CoffeePreparation'
        401:
          description: Login required
    post:
      tags:
        - coffee-preparation
      summary: Add premade coffee preparation
      operationId: addPremadeCoffeePreparation
      security:
      - cookieAuth: []
      responses:
        201:
          description: Successfully added premade coffee preparation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      prepared_coffee:
                        $ref: '#/components/schemas/CoffeePreparation'
        400:
          description: Bad request
        401:
          description: Login required
      requestBody:
        $ref: '#/components/requestBodies/PrepareCoffeePremade'
  /coffeepreparations/last:
    get:
      tags:
        - coffee-preparation
      summary: Get the last coffee preparation
      operationId: getLastCoffeePreparation
      security:
      - cookieAuth: []
      responses:
        200:
          description: Successfully fetched the last coffee preparation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      last_prepared_coffee:
                        $ref: '#/components/schemas/CoffeePreparation'
        401:
          description: Login required
  /coffeerecipes:
    get:
      tags:
        - coffee-recipe
      summary: Get all coffee recipes
      operationId: getAllCoffeeRecipes
      security:
      - cookieAuth: []
      responses:
        200:
          description: Successfully fetched all the coffee recipes
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      coffee_recipes:
                        type: array
                        items:
                          $ref: '#/components/schemas/CoffeeRecipe'
        401:
          description: Login required
    post:
      tags:
        - coffee-recipe
      summary: Add a coffee recipe
      operationId: addCoffeeRecipe
      security:
      - cookieAuth: []
      responses:
        201:
          description: Successfully added the coffee recipe
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      added_recipe:
                        $ref: '#/components/schemas/CoffeeRecipe'
        400:
          description: Bad request
        401:
          description: Login required
      requestBody:
        $ref: '#/components/requestBodies/AddCoffeeRecipe'
  /coffeerecipes/recommendations:
    get:
      tags:
        - coffee-recipe
      summary: Get coffee recipe recommendations
      operationId: getCoffeeRecipesRecommendations
      security:
      - cookieAuth: []
      parameters:
        - name: current_time
          in: query
          required: true
          schema:
            type: string
        - name: temperature
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully fetched the coffee recipe recommendations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      recommendations:
                        type: array
                        items:
                          $ref: '#/components/schemas/CoffeeRecipe'
        401:
          description: Login required
  /coffeerecipes/available:
    get:
      tags:
        - coffee-recipe
      summary: Get available coffee recipes
      operationId: getAvailableCoffeeRecipes
      security:
      - cookieAuth: []
      parameters:
        - name: current_time
          in: query
          required: true
          schema:
            type: string
        - name: temperature
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully fetched all the available coffee recipes
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      available_coffees:
                        type: array
                        items:
                          $ref: '#/components/schemas/CoffeeRecipe'
        401:
          description: Login required
  /environment/temperature:
    get:
      tags:
        - environment
      summary: Get current temperature
      operationId: getTemperature
      responses:
        200:
          description: Successfully fetched the current temperature
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      temperature:
                        type: string
    post:
      tags:
        - environment
      summary: Set current temperature
      operationId: setTemperature
      responses:
        201:
          description: Successfully set the current temperature
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                      timestamp:
                        type: string
                        format: date-time
                      value:
                        type: string
      requestBody:
        $ref: '#/components/requestBodies/SetTemperature'
  /environment/currenttime:
    get:
      tags:
        - environment
      summary: Get current time
      operationId: getTime
      responses:
        200:
          description: Successfully fetched the current time
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      current_time:
                        type: string
  /ingredients:
    get:
      tags:
        - ingredient
      summary: Get all ingredients
      operationId: getAllIngredients
      responses:
        200:
          description: Successfully fetched all the ingredients
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ingredients:
                        type: array
                        items:
                          $ref: '#/components/schemas/Ingredient'
    post:
      tags:
        - ingredient
      summary: Add ingredient
      operationId: addIngredient
      responses:
        201:
          description: Successfully added the ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ingredient:
                        $ref: '#/components/schemas/Ingredient'
      requestBody:
        $ref: '#/components/requestBodies/AddOrUpdateIngredient'
  '/ingredients/{id}':
    get:
      tags:
        - ingredient
      summary: Get one ingredient by id
      operationId: getIngredient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully fetched the ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ingredient:
                        $ref: '#/components/schemas/Ingredient'
        404:
          description: Ingredient not found
    put:
      tags:
        - ingredient
      summary: Update ingredient
      operationId: updateIngredient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully updated the ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      ingredient:
                        $ref: '#/components/schemas/Ingredient'
        404:
          description: Ingredient not found
      requestBody:
        $ref: '#/components/requestBodies/AddOrUpdateIngredient'
    delete:
      tags:
        - ingredient
      summary: Delete ingredient
      operationId: deleteIngredient
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted the ingredient
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
        404:
          description: Ingredient not found
components:
  schemas:
    CoffeePreparation:
      type: object
      properties:
        recipe_id:
          type: integer
          format: int32
        started_at:
          type: string
          format: date
        finished_at:
          type: string
          format: date
        ingredients_with_quantities:
          type: string
    CoffeeRecipe:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        preparation_time:
          type: number
          format: float
        ingredients_with_quantities:
          type: array
          items:
            $ref: '#/components/schemas/IngredientWithQuantity'
    IngredientWithQuantity:
      type: object
      properties:
        ingredient_name:
          type: string
        quantity:
          type: number
          format: float
    Ingredient:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        unit:
          type: string
        available:
          type: number
          format: float
  requestBodies:
    RegisterOrLogin:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              username:
                type: string
              password:
                type: string
    PrepareCoffeeCustom:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              recipe_id:
                type: integer
                format: int32
              ingredient_names:
                type: array
                items:
                  type: string
                  example: 'Cappucino'
              ingredient_quantities:
                type: array
                items:
                  type: number
                  format: float
    PrepareCoffeePremade:
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - recipe_name
            properties:
              recipe_name:
                type: string
                example: 'Cappucino'
    AddCoffeeRecipe:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              preparation_time:
                type: number
                format: float
              ingredients:
                type: array
                items:
                  type: string
              quantities:
                type: array
                items:
                  type: number
                  format: float
    SetTemperature:
      content:
        application/json:
          schema:
            type: object
            properties:
              temp:
                type: string
    AddOrUpdateIngredient:
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
              unit:
                type: string
              available:
                type: number
                format: float
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session